import jsPDF from 'jspdf';
import Logo from '../assets/img/UmusambiLogo.jpg';
import { formatDate } from 'helpers/dateFormatter';
import formatDateToCustomFormat from 'helpers/dateFormatter';
import 'jspdf-autotable';

const GenerateVisitorPaymentPDF = (dataa,totalAmount) => {
  const unit = 'mm';
  const size = 'a4';
  const orientation = 'portrait';
  const doc = new jsPDF(orientation, unit, size);
  const pageWidth = doc.internal.pageSize.getWidth();
  const imageSource = Logo;

  // Logo in the top-left corner
  doc.addImage(imageSource, 'JPG', 5, 5, 50, 20);

  // Current Date in the top-right corner
  const currentDate = formatDate(new Date());
  const dateText = `Date: ${currentDate}`;
  const dateTextWidth = doc.getTextWidth(dateText);
  const dateTextX = pageWidth - dateTextWidth - 15;
  doc.setFontSize(15);
  doc.text(dateText, dateTextX, 25);

  // Page Title
  const titleText = "VISITOR PAYMENT REPORT";
  doc.setFontSize(15);
  doc.text(titleText, 15, 55);

  // Separator Line
  doc.setLineWidth(0.5);
  doc.line(15, 60, pageWidth - 15, 60);

  // Prepare data for the table
  let printableData = [];
  dataa.forEach((data, index) => {
    const visitorName = `${data.visitor.firstname} ${data.visitor.lastname}`;
    const amountPaid = `${data.fees} RWF`;
    const paymentDate = formatDateToCustomFormat(data.createdAt);
    const nationalID = data.visitor.nID;
    printableData.push({
      visitorName, amountPaid, paymentDate, nationalID
    });
  });

  const printData = printableData.map((data, index) => [
    index + 1,
    data.visitorName,
    data.amountPaid,
    data.paymentDate,
    data.nationalID,
  ]);
printData.push(["Total Amount", "", "", "", `  ${totalAmount} RWF`]);

  // Auto-generate a table in the PDF using autoTable
  doc.autoTable({
    head: [['No.', 'Visitor Name', 'Amount Paid', 'Payment Date', 'National ID ']],
    body: printData,
    startY: 75,
    margin: { top: 5, bottom: 5 }
  });

  // Signature
  const lineHeight = 15;
  const signatureText = `Generated by Visitor Management System`;
  doc.setFontSize(11);
  doc.text(signatureText, 15, doc.autoTable.previous.finalY + lineHeight);

  // Final Line
  doc.setDrawColor('#739900');
  doc.line(15, doc.autoTable.previous.finalY + lineHeight * 2, pageWidth - 15, doc.autoTable.previous.finalY + lineHeight * 2);

  // Address Text
  const addressText = 'KN 25 Rd, KG 1 Ave, P.O. Box 0033, Nyarugenge, Kigali, Rwanda';
  const textFontSize = 8;
  const addressTextWidth = doc.getTextWidth(addressText);
  const addressTextX = (pageWidth - addressTextWidth) / 2;

  doc.setFontSize(textFontSize);
  doc.text(addressText, addressTextX, doc.autoTable.previous.finalY + lineHeight * 3);

  // Save PDF
  doc.save(`visitor-payment-report-${currentDate}.pdf`);
};

export default GenerateVisitorPaymentPDF;
